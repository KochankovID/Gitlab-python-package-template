[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "0.0.1"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.author}}"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "{{cookiecutter.python_version}}"

[tool.poetry.dev-dependencies]
pre-commit = "^2.19.0"
pylint = "^2.13.9"
pylint-pytest = "^1.1.2"
flake8 = "^4.0.1"
pyproject-flake8 = "^0.0.1-alpha.4"
mypy = "^0.950"
black = "^22.3.0"
isort = "^5.10.1"
pyupgrade = "^2.32.1"
pytest = "^7.1.2"
tox = "^3.25.0"
python-semantic-release = "^7.28.1"
pytest-html = "^3.1.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
branch = "main"
hvcs = "gitlab"
build_command = "poetry build"
upload_to_pypi = false
repository = "gitlag"
repository_url = "https://gitlab.com/api/v4/projects/{{cookiecutter.repository_id}}/packages/pypi"

[tool.pylint.'MASTER']
ignore = ".venv, Dockerfile, docker-compose.yml, docker-compose-test.yml, Procfile, README.md, poetry.lock, pyproject.toml, config.yml"
load-plugins = [
    "pylint_pytest"
]

[tool.pylint."MESSAGES CONTROL"]
max-line-length = 120
disable = [
    "missing-docstring",
    "import-outside-toplevel",
    "too-few-public-methods",
    "logging-fstring-interpolation",
    "import-error"
]

[tool.isort]
profile = "black"
force_sort_within_sections = true
combine_as_imports = true

[tool.black]
line-length = 120
